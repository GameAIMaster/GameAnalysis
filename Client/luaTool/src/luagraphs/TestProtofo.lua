---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wangdongliang.
--- DateTime: 2018/9/28 9:43
---
--两种方法，一种调用的是Protoc.lua 来生成pb，另一种是利用protoc.exe,解析.protobuf文件生成pb文件，由lua require它。
--print(package.path)
--print(package.cpath)
--
--local pb = require("pb")
--local protoc = require "luagraphs.protoc"
--
--assert(protoc:load [[
--   message Phone {
--      optional string name        = 1;
--      optional int64  phonenumber = 2;
--   }
--   message Person {
--      optional string name     = 1;
--      optional int32  age      = 2;
--      optional string address  = 3;
--      repeated Phone  contacts = 4;
--   } ]])
--
--local data = {
--    name = "ilse",
--    age  = 18,
--    contacts = {
--        { name = "alice", phonenumber = 12312341234 },
--        { name = "bob",   phonenumber = 45645674567 }
--    }
--}
--
--local bytes = assert(pb.encode("Person", data))
--print(pb.tohex(bytes))
--
--local data2 = assert(pb.decode("Person", bytes))
--print(require "luagraphs.serpent".block(data2))

local pb = require "pb" -- 载入 pb.dll

assert(pb.loadfile "luagraphs/Test.pb") -- 载入刚才编译的pb文件

local person = { -- 我们定义一个addressbook里的 Person 消息
    name = "Alice",
    id = 12345,
    phone = {
        { number = "1301234567" },
        { number = "87654321", type = "WORK" },
    }
}

-- 序列化成二进制数据
local data = assert(pb.encode("tutorial.Person", person))

-- 从二进制数据解析出实际消息
local msg = assert(pb.decode("tutorial.Person", data))

-- 打印消息内容（使用了serpent开源库）
print(require "luagraphs.serpent".block(msg))