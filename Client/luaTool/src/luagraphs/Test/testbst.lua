---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wangdongliang.
--- DateTime: 2019/3/12 17:15
---
weekdaysString = "0000-0000;0000-1030"
local a =1
--for val in string.gmatch(weekdaysString, "%d+-%d+") do
--
--    print(a..val)
--end
print(string.gmatch(weekdaysString, "%d+-%d+"))
print(tonumber('-199'))

local bst = require "sort.bst"

local tests = {}

function tests.iteration()
    local keys = {8,6,7,4,12,13,10}
    local tree = bst:new()
    tree:insert(8,"wang")
    tree:insert(6,"dong")
    tree:insert(7,"liang")
    tree:insert(4,"he")
    tree:insert(12,"wu")
    tree:insert(13,"yan")
    tree:insert(10,"jie")
    table.sort(keys)
    local results = {}
    for n, v in tree:iter() do
        table.insert(results, v)
    end
    for i, v in ipairs(results) do
        assert(v == keys[i])
    end
end

function tests.reverse_iteration()
    local keys = {8,6,7,4,12,13,10}
    local tree = bst:new()
    tree:insert(8,"wang")
    tree:insert(6,"dong")
    tree:insert(7,"liang")
    tree:insert(4,"he")
    tree:insert(12,"wu")
    tree:insert(13,"yan")
    tree:insert(10,"jie")
    print(tree);
    table.sort(keys, function(v1, v2) return v1>v2 end)
    local results = {}
    for n, v in tree:rev_iter() do
        table.insert(results, v)
    end
    for i, v in ipairs(results) do
        assert(v == keys[i])
    end
end

function tests.search()
    local tree = bst:new()
    tree:insert(8,"wang")
    tree:insert(6,"dong")
    tree:insert(7,"liang")
    tree:insert(4,"he")
    tree:insert(12,"wu")
    tree:insert(13,"yan")
    tree:insert(10,"jie")
    for i, v in ipairs{8,6,7,4,12,13,10} do
        local node = tree:search(v);
        assert(node)
        print(node.value)
    end
    for i, v in ipairs{5,3,11,14,9} do
        assert(not tree:search(v))
    end
end

function tests.delete()
    local tree = bst:new()
    tree:insert(8,"wang")
    tree:insert(6,"dong")
    tree:insert(7,"liang")
    tree:insert(4,"he")
    tree:insert(12,"wu")
    tree:insert(13,"yan")
    tree:insert(10,"jie")
    tree:clear();
    --tree:delete(11)
    --tree:delete(8)
    --tree:delete(12)
    --tree:delete(4)
    --tree:delete(13)
    --tree:delete(7)
    --tree:delete(6)
    --tree:delete(10)
    tree:insert(8,"wang")
    tree:insert(6,"dong")
    tree:insert(7,"liang")
    tree:insert(4,"he")
    tree:insert(12,"wu")
    tree:insert(13,"yan")
    tree:insert(10,"jie")
    for i, v in ipairs{13,7,12,10} do
        assert(tree:search(v))
    end
    --for i, v in ipairs{4,6,8} do
    --    assert(not tree:search(v))
    --end
end

function tests.all()
    for name, test in pairs(tests) do
        if name ~= "all" then
            print("running test "..name)
            test()
        end
    end
end

tests.all();
--return tests