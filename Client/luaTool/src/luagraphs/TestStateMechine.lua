---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wangdongliang.
--- DateTime: 2018/6/27 14:20
---
local machine = require('luagraphs.statemachine')


local fsm = machine.create({
    initial = 'green',
    events = {
        { name = 'warn',  from = 'green',  to = 'yellow' },
        { name = 'panic', from = 'yellow', to = 'red'    },
        { name = 'calm',  from = 'red',    to = 'yellow' },
        { name = 'clear', from = 'yellow', to = 'green'  }
    },
    callbacks = {
        onpanic =  function(self, event, from, to, msg) print('panic! ' .. msg)    end,
        onclear =  function(self, event, from, to, msg) print('thanks to ' .. msg) end,
        --onbeforewarn = function() print("beforewarn") end,
        onafterwarn = function() print("beafterwarn") end,
        ongreen =  function(self, event, from, to)      print('green light')      end,
        onleavegreen = function(fsm, name, from, to) print("onleavegreen")  return fsm.ASYNC  end,
        onyellow = function(self, event, from, to)      print('yellow light')      end,
        onenteryellow = function() print("onenteryellow") end,
        onred =    function(self, event, from, to)      print('red light')         end,
    }
})

function fsm:onbeforewarn()
    print("beforewarn")
end

fsm:warn()
print(fsm.current)
fsm:transition(fsm:warn())  --异步时回调的是停止的事件名
--fsm:panic('killer bees')
--fsm:calm()
--fsm:clear('sedatives in the honey pots')
--print(fsm.current)

--fsm.onstatechange = function(self, event, from, to) print(to) end